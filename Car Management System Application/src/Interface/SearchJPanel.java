  /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarInformationList;
import java.awt.CardLayout;
import java.awt.TextField;
import java.time.Year;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Priyanka Malpekar
 */
public class SearchJPanel extends javax.swing.JPanel {
private JPanel userProcessContainer;  
private ArrayList<Car> carList;

    /**
     * Creates new form SearchJPanel
     */
    SearchJPanel(JPanel userProcessContainer, ArrayList<Car> carList) {
        initComponents(); 
        this.userProcessContainer = userProcessContainer;
        this.carList=carList;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void populateTable(){
    DefaultTableModel dtm = (DefaultTableModel) tblcarDetails.getModel();
        dtm.setRowCount(0);
        for(Car car: carList){
         Object[] row = new Object[9]; 
         row[0]=car;
         //row[1]=car.getBrand();
         row[1]=car.isAvailable();
         row[2]=car.getManufactured_year();
         row[3]=car.getMin_seats();
         row[4]=car.getMax_seats();
         row[5]=car.getSerial_num();
         row[6]=car.getModel_num();
         row[7]=car.getAvailble_city();
         row[8]=car.isMaintenance_certificate();
         
         dtm.addRow(row);
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblcarDetails = new javax.swing.JTable();
        BrandTextField = new javax.swing.JTextField();
        btnSearchBrand = new javax.swing.JButton();
        btnSearchCity = new javax.swing.JButton();
        CityTextField = new javax.swing.JTextField();
        btnSearchModel = new javax.swing.JButton();
        ModelTextField = new javax.swing.JTextField();
        btnSearchYear = new javax.swing.JButton();
        YearTextField = new javax.swing.JTextField();
        btnSearchSerial = new javax.swing.JButton();
        SerialNoTextField = new javax.swing.JTextField();
        btnAvailableCars = new javax.swing.JButton();
        btnSearchMainCert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MaxSeatsTextField = new javax.swing.JTextField();
        MinSeatsTextField = new javax.swing.JTextField();
        btnSearchSeat = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnFirstAvail = new javax.swing.JButton();
        FirstAvailCarTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnManufactuedCars = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ManufacturedCarsTextArea = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(255, 204, 102));

        tblcarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Brand", "Available", "Manufactured_year", "Min_Seats", "Max_Seats", "Serial_Num", "Model_Num", "Available_city", "Maintainence_certificate"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblcarDetails);

        BrandTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrandTextFieldActionPerformed(evt);
            }
        });

        btnSearchBrand.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        btnSearchBrand.setText("Search By Brand");
        btnSearchBrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBrandActionPerformed(evt);
            }
        });

        btnSearchCity.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchCity.setText("Search By City");
        btnSearchCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCityActionPerformed(evt);
            }
        });

        CityTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CityTextFieldActionPerformed(evt);
            }
        });

        btnSearchModel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchModel.setText("Search By Model No");
        btnSearchModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchModelActionPerformed(evt);
            }
        });

        ModelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModelTextFieldActionPerformed(evt);
            }
        });

        btnSearchYear.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchYear.setText("Search by Year");
        btnSearchYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchYearActionPerformed(evt);
            }
        });

        YearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearTextFieldActionPerformed(evt);
            }
        });

        btnSearchSerial.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchSerial.setText("Search by SerialNo");
        btnSearchSerial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSerialActionPerformed(evt);
            }
        });

        SerialNoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SerialNoTextFieldActionPerformed(evt);
            }
        });

        btnAvailableCars.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnAvailableCars.setText("Availability");
        btnAvailableCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailableCarsActionPerformed(evt);
            }
        });

        btnSearchMainCert.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchMainCert.setText("Maintainence Cert");
        btnSearchMainCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMainCertActionPerformed(evt);
            }
        });

        jLabel1.setText("Enter Max Seats:");

        jLabel2.setText("Enter Min Seats:");

        btnSearchSeat.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSearchSeat.setText("Search Seat");
        btnSearchSeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchSeatActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnFirstAvail.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnFirstAvail.setText("First Available Car");
        btnFirstAvail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailActionPerformed(evt);
            }
        });

        FirstAvailCarTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstAvailCarTextFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Search Car Details");

        btnManufactuedCars.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnManufactuedCars.setText("Manufactured Cars");
        btnManufactuedCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManufactuedCarsActionPerformed(evt);
            }
        });

        ManufacturedCarsTextArea.setColumns(20);
        ManufacturedCarsTextArea.setRows(5);
        jScrollPane2.setViewportView(ManufacturedCarsTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(btnSearchSeat))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack)
                        .addGap(155, 155, 155)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSearchCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSearchBrand, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSearchModel, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(BrandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(ModelTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addComponent(CityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addComponent(YearTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                            .addComponent(MaxSeatsTextField)
                                            .addComponent(MinSeatsTextField)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnSearchYear, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearchSerial)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SerialNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnManufactuedCars, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAvailableCars, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnFirstAvail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSearchMainCert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FirstAvailCarTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)))
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BrandTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchBrand)
                    .addComponent(btnSearchSerial)
                    .addComponent(SerialNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAvailableCars, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearchCity)
                        .addComponent(CityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchModel)
                    .addComponent(ModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearchMainCert))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchYear)
                    .addComponent(YearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFirstAvail)
                    .addComponent(FirstAvailCarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(MaxSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnManufactuedCars))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(MinSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearchSeat)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BrandTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrandTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BrandTextFieldActionPerformed

    private void btnSearchBrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBrandActionPerformed
        // TODO add your handling code here:
        
        String brand = BrandTextField.getText();
        ArrayList<Car> searchByBrand = CarInformationList.searchByBrand(brand, carList);
        
        if(searchByBrand == null){
            JOptionPane.showMessageDialog(null, "Car of the given brand does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByBrand);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchBrandActionPerformed

    private void CityTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CityTextFieldActionPerformed
        
    }//GEN-LAST:event_CityTextFieldActionPerformed

    private void btnSearchCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCityActionPerformed
        // TODO add your handling code here:
        String city = CityTextField.getText();
        ArrayList<Car> searchByCity = CarInformationList.searchByCity(city, carList);
        
        if(searchByCity == null){
            JOptionPane.showMessageDialog(null, "Car available in the given city does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByCity);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchCityActionPerformed

    private void ModelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ModelTextFieldActionPerformed

    private void btnSearchModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchModelActionPerformed
        // TODO add your handling code here:
        String model = ModelTextField.getText();
        ArrayList<Car> searchByModel = CarInformationList.searchByModel(model, carList);
        
        if(searchByModel == null){
            JOptionPane.showMessageDialog(null, "Car available in the given model does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByModel);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchModelActionPerformed

    private void YearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearTextFieldActionPerformed

    private void btnSearchYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchYearActionPerformed
        // TODO add your handling code here:
        int year = Integer.parseInt(YearTextField.getText());
        ArrayList<Car> searchByYear = CarInformationList.searchByYear(year, carList);
        
        if(searchByYear == null){
            JOptionPane.showMessageDialog(null, "Cars manufactured in the given year does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByYear);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchYearActionPerformed

    private void SerialNoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SerialNoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SerialNoTextFieldActionPerformed

    private void btnSearchSerialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSerialActionPerformed
        // TODO add your handling code here:
        int serial = Integer.parseInt(SerialNoTextField.getText());
        ArrayList<Car> searchBySerial = CarInformationList.searchBySerial(serial, carList);
        
        if(searchBySerial == null){
            JOptionPane.showMessageDialog(null, "Cars with the given SerialNo does not exist", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchBySerial);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchSerialActionPerformed

    private void btnAvailableCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailableCarsActionPerformed
        // TODO add your handling code here:
        Boolean available = true;
        ArrayList<Car> searchByAvail = CarInformationList.searchByAvail(available, carList);
        
        if(searchByAvail == null){
            JOptionPane.showMessageDialog(null, "Cars are not available", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByAvail);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnAvailableCarsActionPerformed

    private void btnSearchMainCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMainCertActionPerformed
        // TODO add your handling code here:
        Boolean MainCert = false;
        ArrayList<Car> searchByMainCert = CarInformationList.searchByMainCert(MainCert, carList);
        
        if(searchByMainCert == null){
            JOptionPane.showMessageDialog(null, "Maintainence Certificates are not Expired", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByMainCert);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnSearchMainCertActionPerformed

    private void btnSearchSeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchSeatActionPerformed
        // TODO add your handling code here:
        int maxSeats = Integer.parseInt(MaxSeatsTextField.getText());
        int minSeats = Integer.parseInt(MinSeatsTextField.getText());
        
        ArrayList<Car> seatlist = CarInformationList.searchSeats(maxSeats,minSeats, carList);
        
        if(seatlist == null){
            JOptionPane.showMessageDialog(null, "No car available", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, seatlist);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
           
    }//GEN-LAST:event_btnSearchSeatActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnFirstAvailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailActionPerformed
        // TODO add your handling code here:
        Boolean available = true;
        
        ArrayList<Car> searchByFirstAvailable = CarInformationList.searchByFirstAvailable(available,carList);
        
        if(searchByFirstAvailable == null){
            JOptionPane.showMessageDialog(null, "No car available currently", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            DisplayFilterJPanel filterpanel = new DisplayFilterJPanel(userProcessContainer, searchByFirstAvailable);
            userProcessContainer.add("DisplayFilterJPanel", filterpanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
           
    }//GEN-LAST:event_btnFirstAvailActionPerformed

    private void btnManufactuedCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManufactuedCarsActionPerformed
        // TODO add your handling code here:
        Set<String> set = new HashSet<String>();
        
         for(Car c: CarInformationList.getArrayUniqueList()){
            set.add(c.getBrand());
        }
        StringBuilder sb = new StringBuilder();
        for (String i : set){
            sb.append (i == null ? " " : i.toString());
            sb.append("\n");
        }
        ManufacturedCarsTextArea.setText(String.valueOf(sb));
    }//GEN-LAST:event_btnManufactuedCarsActionPerformed

    private void FirstAvailCarTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstAvailCarTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstAvailCarTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BrandTextField;
    private javax.swing.JTextField CityTextField;
    private javax.swing.JTextField FirstAvailCarTextField;
    private javax.swing.JTextArea ManufacturedCarsTextArea;
    private javax.swing.JTextField MaxSeatsTextField;
    private javax.swing.JTextField MinSeatsTextField;
    private javax.swing.JTextField ModelTextField;
    private javax.swing.JTextField SerialNoTextField;
    private javax.swing.JTextField YearTextField;
    private javax.swing.JButton btnAvailableCars;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFirstAvail;
    private javax.swing.JButton btnManufactuedCars;
    private javax.swing.JButton btnSearchBrand;
    private javax.swing.JButton btnSearchCity;
    private javax.swing.JButton btnSearchMainCert;
    private javax.swing.JButton btnSearchModel;
    private javax.swing.JButton btnSearchSeat;
    private javax.swing.JButton btnSearchSerial;
    private javax.swing.JButton btnSearchYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblcarDetails;
    // End of variables declaration//GEN-END:variables

}
